# Generated by Django 3.1.3 on 2021-02-02 07:12

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssociatedWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='associated/')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_name', models.CharField(max_length=164, verbose_name='Private name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='HeadersMenuNavbar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_id', models.CharField(max_length=100, unique=True)),
                ('menu', models.CharField(max_length=60)),
                ('url', models.CharField(max_length=100)),
                ('show_in_footer', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_name', models.CharField(max_length=164, verbose_name='Private name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.category')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Post')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_publishable', models.BooleanField(default=False, verbose_name='Is Publishable ?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at ')),
                ('photo', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('draft', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True)),
                ('description', models.TextField(max_length=2000)),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology_category_id', models.CharField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyStackItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology_stack_item_category_id', models.CharField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyStackSubItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology_stack_subitem_id', models.CharField(max_length=60)),
                ('title', models.CharField(max_length=60)),
                ('image_icon', models.ImageField(upload_to='technology_stack_sub_item/')),
            ],
        ),
        migrations.CreateModel(
            name='Test1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='TrustedWith',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='trusted_with/')),
            ],
        ),
        migrations.CreateModel(
            name='Test2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirname', models.CharField(max_length=60)),
                ('test1', models.ManyToManyField(related_name='names', to='custom_ui.Test1')),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyStackItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('technology_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.technologycategory')),
                ('technology_stack_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.technologystackitemcategory')),
                ('technology_stack_sub_item', models.ManyToManyField(to='custom_ui.TechnologyStackSubItem')),
            ],
        ),
        migrations.CreateModel(
            name='ItemI18n',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=164, verbose_name='Name i18n')),
                ('language_key', models.CharField(max_length=20, verbose_name='Language')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.item')),
            ],
            options={
                'verbose_name': 'Item i18n',
                'verbose_name_plural': 'Items i18n',
            },
        ),
        migrations.CreateModel(
            name='HeadersSubMenuType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, null=True)),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_menu', to='custom_ui.headersmenunavbar')),
            ],
        ),
        migrations.CreateModel(
            name='HeadersSubMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_menu_id', models.CharField(max_length=60, unique=True)),
                ('item', models.CharField(max_length=60)),
                ('url', models.CharField(max_length=100)),
                ('show_in_footer', models.BooleanField(default=True)),
                ('types', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_menu_items', to='custom_ui.headerssubmenutype')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.CharField(max_length=60)),
                ('title', models.CharField(max_length=60)),
                ('image', models.ImageField(upload_to='content/')),
                ('summary', models.TextField(max_length=2000)),
                ('contents', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='custom_ui.features')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryI18n',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=164, verbose_name='Name i18n')),
                ('language_key', models.CharField(max_length=20, verbose_name='Language')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.category')),
            ],
            options={
                'verbose_name': 'Category i18n',
                'verbose_name_plural': 'Categories i18n',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('draft', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_ui.question')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_photo', models.ImageField(upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
